/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.42).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.paradigmadigital.technicaltest.infrastructure.rest;

import com.paradigmadigital.technicaltest.domain.dto.FindPricesDTO;
import com.paradigmadigital.technicaltest.domain.entity.Price;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.validation.Valid;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import java.util.List;

@Validated
public interface PricesAPI {

    @Operation(summary = "Find prices", description = "Retrieves a list of prices for the given input parameters", tags = {})
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Price.class)))),

            @ApiResponse(responseCode = "400", description = "Bad Request"),

            @ApiResponse(responseCode = "500", description = "Internal Server Error")})
    @RequestMapping(value = "/api",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    @Tag(name = "Prices", description = "Prices section of the API")
    ResponseEntity<List<Price>> apiPost(
            @RequestHeader HttpHeaders headers,
            @Parameter(
                    in = ParameterIn.DEFAULT,
                    description = "The request body takes a FindPricesDTO schema object with the filtering parameters",
                    required = true,
                    schema = @Schema())
            @Valid @RequestBody FindPricesDTO body);

}

